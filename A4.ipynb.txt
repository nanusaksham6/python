{
  "cells": [
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "# Q1\n",
        "x=np.array([1,2,3,4,5])\n",
        "x=x+2\n",
        "# print(x)\n",
        "x=x*3\n",
        "# print(x)\n",
        "x=x/2\n",
        "# print(x)\n",
        "\n",
        "# Q2\n",
        "arr=np.array([1,2,3,6,4,5])\n",
        "arr=arr[::-1]\n",
        "# print(arr)\n",
        "\n",
        "x=np.array([1,2,3,4,5,1,2,1,1,1])\n",
        "y = np.array([1, 1, 1, 2, 3, 4, 2, 4, 3, 3])\n",
        "\n",
        "\n",
        "def most_frequent_value_indices(arr):\n",
        "    values, counts = np.unique(arr, return_counts=True)  # Get unique values and their counts\n",
        "    max_count = np.max(counts)  # Find the maximum count\n",
        "    most_frequent_value = values[np.argmax(counts)]  # Find the value with the max count\n",
        "    indices = np.where(arr == most_frequent_value)[0]  # Find indices of that value\n",
        "    return most_frequent_value, indices\n",
        "x_most_freq, x_indices = most_frequent_value_indices(x)\n",
        "y_most_freq, y_indices = most_frequent_value_indices(y)\n",
        "\n",
        "# print(f\"Most frequent value in x: {x_most_freq}, Indices: {x_indices}\")\n",
        "# print(f\"Most frequent value in y: {y_most_freq}, Indices: {y_indices}\")\n",
        "\n",
        "\n",
        "# Q3\n",
        "arr=np.array([[10,20,30],[40,50,60],[70,80,90]])\n",
        "# print(arr)\n",
        "\n",
        "# print(arr[0,1])\n",
        "# print(arr[2,0])\n",
        "\n",
        "#Q4\n",
        "ishan=np.linspace(10,100,25)\n",
        "print(ishan)\n",
        "print(ishan.ndim)\n",
        "print(ishan.shape)\n",
        "print(ishan.size)\n",
        "print(ishan.dtype)\n",
        "print(ishan.itemsize*ishan.size)\n",
        "t_ishan=ishan.reshape(25,1)\n",
        "print(t_ishan)\n",
        "transposed_ishan=ishan.T\n",
        "print(transposed_ishan)\n",
        "\n",
        "# Q5\n",
        "ucs420_ishan=np.array([10, 20, 30, 40, 50, 60, 70, 80, 90, 15, 20, 35])\n",
        "ucs420_ishan=ucs420_ishan.reshape(3,4)\n",
        "print(ucs420_ishan.max())\n",
        "print(ucs420_ishan.min())\n",
        "print(ucs420_ishan.mean())\n",
        "median=np.median(ucs420_ishan)\n",
        "print(median)\n",
        "\n",
        "unique_values= np.unique(ucs420_ishan, return_counts=False)\n",
        "print(unique_values)\n",
        "\n",
        "resized_usc420_ishan=ucs420_ishan.reshape(4,3)\n",
        "print(resized_usc420_ishan)\n",
        "\n"
      ],
      "outputs": [],
      "execution_count": null
    }
  ],
  "metadata": {
    "anaconda-cloud": {},
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.1"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 4
}